import cv2
import numpy as np

def detect_leaves(image_path):
    # Load the image
    image = cv2.imread(image_path)
    
    # Convert the image to grayscale
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    
    # Apply a Gaussian blur to reduce noise
    blurred = cv2.GaussianBlur(gray, (5, 5), 0)
    
    # Perform edge detection using Canny
    edges = cv2.Canny(blurred, 30, 150)
    
    # Find contours of the edges
    contours, _ = cv2.findContours(edges.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
    
    # Create a copy of the original image
    image_with_contours = image.copy()
    
    # Filter and draw contours on the image
    for contour in contours:
        # Calculate contour area
        area = cv2.contourArea(contour)
        
        # Filter out small contours
        if area > 1000:
            cv2.drawContours(image_with_contours, [contour], -1, (0, 255, 0), 2)
    
    # Display the images
    cv2.imshow("Original Image", image)
    cv2.imshow("Detected Leaves", image_with_contours)
    cv2.waitKey(0)
    cv2.destroyAllWindows()

# Call the detect_leaves function with the path to your image
detect_leaves("path/to/your/image.jpg")
